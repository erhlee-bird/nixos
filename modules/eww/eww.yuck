;; -----------------------------------------------------------------------------
;; Variables.
;; -----------------------------------------------------------------------------

(defpoll battery :interval "15s" "./scripts/battery.sh --bat")
(defpoll battery_status :interval "1m" "./scripts/battery.sh --bat-st")
(defpoll brightness_percent :interval "10s" "brightnessctl -m | cut -d ',' -f 4 | tr -d '%'")
(defpoll calendar_day :interval "4h" "date '+%d'")
(defpoll calendar_year :interval "24h" "date '+%Y'")
(defpoll clock_time :interval "1m" "date +\%I")
(defpoll clock_minute :interval "5s" "date +\%M")
(defpoll clock_date :interval "4h" "date '+%F'")
(defpoll volume_percent :interval "3s" "wpctl get-volume @DEFAULT_AUDIO_SINK@ | cut -d . -f 2")
(defvar show_brightness_widget false)
(defvar show_clock_widget false)
(defvar show_volume_widget false)
(defvar show_wifi_widget false)
(deflisten workspace "./scripts/workspaces.sh")

;; (defpoll COL_WLAN :interval "1m" "./scripts/wifi --COL")
(defpoll wlan_ssid :interval "1m" "./scripts/wifi.sh | jq -r .ssid")
(defpoll wlan_icon :interval "1m" "./scripts/wifi.sh | jq -r .icon")

(defvar eww "eww -c $HOME/.config/eww")
(defvar eww_scripts "$HOME/.config/eww/scripts")

;; -----------------------------------------------------------------------------
;; Widgets.
;; -----------------------------------------------------------------------------

(defwidget widget-battery
           []
           (box
            :class "battery-widget"
            :hexpand "false"
            :vexpand "false"
            (circular-progress
             :class "battery-bar"
             :thickness 4
             :value battery
             (button
              :class "battery-icon"
              ;; :limit-width 2
              :onclick "${eww_scripts}/pop system"
              ;; :show-truncated false
              :tooltip "battery on ${battery}%"
              ""))))

(defwidget widget-brightness []
           (eventbox
            :onhover "${eww} update show_brightness_widget=true"
            :onhoverlost "${eww} update show_brightness_widget=false"
            (box
             :class "brightness-widget"
             :orientation "h"
             :space-evenly "false"
             :spacing "3"
             (label
              :text "ðŸ”†"
              :class "icon"
              :tooltip "brightness at ${brightness_percent}%")
             (revealer
              :transition "slideleft"
              :reveal show_brightness_widget
              :duration "350ms"
              (scale
               :class "brightness-bar"
               :max 100
               :min 0
               :onchange "brightnessctl set {}%"
               :orientation "h"
               :tooltip "${brightness_percent}%"
               :value brightness_percent)))))

(defwidget widget-clock []
           (eventbox
            :onhover "${eww} update show_clock_widget=true"
            :onhoverlost "${eww} update show_clock_widget=false"
            (box
             :class "clock-widget"
             :orientation "h"
             :space-evenly "false"
             :spacing "3"
             (label
              :class "clock-time"
              :text clock_time)
             (label
              :class "clock-time-sep"
              :text ":")
             (label
              :class "clock-minute-class"
              :text clock_minute)
             (revealer
              :duration "350ms"
              :reveal show_clock_widget
              :transition "slideleft"
              (button
               :class "clock-date"
               :onclick "${eww_scripts}/pop calendar" clock_date)))))

(defwidget widget-separator []
           (box
            :class "module-2"
            :hexpand "false"
            :vexpand "false"
            (label
             :class "separator"
             :text "|")))

(defwidget widget-volume []
           (eventbox
            :onhover "${eww} update show_volume_widget=true"
            :onhoverlost "${eww} update show_volume_widget=false"
            (box
             :class "volume-widget"
             :orientation "h"
             :space-evenly "false"
             :spacing "3"
             (button
              :class "icon"
              :onclick "${eww_scripts}/pop volume"
              "ðŸ”Š")
             (revealer
              :duration "350ms"
              :reveal show_volume_widget
              :transition "slideleft"
              (scale
               :class "volume-bar"
               :max 100
               :min 0
               :onchange "wpctl set-volume @DEFAULT_AUDIO_SINK@ {}%"
               :orientation "h"
               :tooltip "${volume_percent}%"
               :value volume_percent)))))

(defwidget widget-wifi []
           (eventbox
            :onhover "${eww} update show_wifi_widget=true"
            :onhoverlost "${eww} update show_wifi_widget=false"
            (box
             :class "wifi-widget"
             :hexpand "false"
             :vexpand "false"
             :space-evenly "false"
             (button
              :class "icon"
              ;; :limit-width 12
              :onclick "networkmanager_dmenu"
              ;; :style "color: ${COL_WLAN};"
              ;; :wrap "false"
              wlan_icon)
             (revealer
              :duration "350ms"
              :reveal show_wifi_widget
              :transition "slideright"
              (label
               :class "wifi-bar"
               ;; :orientation "h"
               :text wlan_ssid)))))

(defwidget widget-workspaces []
           (literal :content workspace))

;; Container widgets.

(defwidget widgets-left []
           (box
            :class "widgets-left"
            :halign "start"
            :orientation "h"
            :space-evenly false
            (widget-workspaces)))

(defwidget widgets-right []
           (box
            :class "widgets-right"
            :halign "end"
            :orientation "h"
            :space-evenly false
            (widget-brightness)
            (widget-volume)
            (widget-wifi)
            (widget-separator)
            (widget-battery)
            (widget-separator)
            (widget-clock)))

(defwidget widget-bar []
           (box
            :class "widgets-bar"
            :orientation "h"
            (widgets-left)
            (widgets-right)))

;; -----------------------------------------------------------------------------
;; Windows.
;; -----------------------------------------------------------------------------

;; (defwindow audio_ctl
;;            :geometry (geometry :x "-20px"
;;                                :y "7%"
;;                                :anchor "top right"
;;                                :width "280px"
;;                                :height "60px")
;;            (audio))

(defwindow bar
           :geometry (geometry :x "0%"
                               :y "0%"
                               :width "100%"
                               :height "50px"
                               :anchor "top center")
           :monitor 2
           :reserve (struts :distance "50px" :side "top")
           :stacking "fg"
           :windowtype "dock"
           :wm-ignore false
           (widget-bar))

;; (defwindow calendar
;;            :geometry (geometry :x "-20px"
;;                                :y "7%"
;;                                :anchor "top right"
;;                                :width "270px"
;;                                :height "60px")
;;            (cal))

;; (defwindow system
;;            :geometry (geometry :x "-20px"
;;                                :y "7%"
;;                                :anchor "top right"
;;                                :width "290px"
;;                                :height "120px")
;;            (system))
